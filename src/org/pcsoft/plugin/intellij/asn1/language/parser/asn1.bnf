{
    parserClass="org.pcsoft.plugin.intellij.asn1.language.parser.Asn1Parser"
    parserUtilClass="org.pcsoft.plugin.intellij.asn1.language.parser.Asn1ParserUtil"
    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Asn1"
    psiImplClassSuffix="Impl"
    psiPackage="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element"
    psiImplPackage="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element"

    elementTypeHolderClass="org.pcsoft.plugin.intellij.asn1.language.parser.token.Asn1GenElementFactory"
    elementTypeClass="org.pcsoft.plugin.intellij.asn1.language.parser.token.Asn1ElementType"
    tokenTypeClass="org.pcsoft.plugin.intellij.asn1.language.parser.token.Asn1TokenType"

    psiImplUtilClass="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.util.Asn1ElementUtils"
}

asn1File ::= moduleDefinition

/**********************************************************************************************************************/
/******************************* Module Definition ********************************************************************/
/**********************************************************************************************************************/

moduleDefinition ::= moduleDefinitionName valueObjectIdentifier? 'DEFINITIONS' moduleTag '::=' moduleBody {
                     mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
                     implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
                     methods=[getName setName getNameIdentifier getPresentation]
}
moduleDefinitionName ::= moduleDefinitionNameTokenSet
{
    methods=[getName]
}
private moduleTag ::= (['IMPLICIT' | 'EXPLICIT' | 'AUTOMATIC'] 'TAGS')?
private moduleBody ::= 'BEGIN' exportDefinition? importDefinition? moduleContent 'END'
moduleContent ::= (objectClassDefinition | enumeratedDefinition | classDefinition | objectValueDefinition | objectSetDefinition)*
/**********************************************************************************************************************/
/********************************* Module Imports *********************************************************************/
/**********************************************************************************************************************/
importDefinition ::= 'IMPORTS' importBody
private importBody ::= importContent? ';'
importContent ::= importElement+
importElement ::= importElementTypes 'FROM' importElementModule valueObjectIdentifier?
private importElementTypes ::= (importElementType ',')* importElementType
importElementType ::= importElementTypeRef ('{' '}')?
importElementModule ::= importElementModuleTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReference]
}

/**********************************************************************************************************************/
/********************************* Module Exports *********************************************************************/
/**********************************************************************************************************************/

exportDefinition ::= 'EXPORTS' exportBody
private exportBody ::= ('ALL' | exportContent)? ';'
exportContent ::= (NAME_NO_CAP | NAME_CAP | NAME_LOWER | NAME_UPPER)*

/**********************************************************************************************************************/
/******************************* Class Definition *********************************************************************/
/**********************************************************************************************************************/

classDefinition ::= classDefinitionName parameterDefinition? '::='  tagDefinition? (nativeType | elementDefinitionType)  constraintDefinition? classDefinitionBody? constraintDefinition? modifiers
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
classDefinitionName ::= classDefinitionNameTokenSet
{
    methods=[getName]
}
private classDefinitionBody ::= '{' (classDefinitionContent | constantDefinitionContent)? '}'
classDefinitionContent ::= (classDefinitionField ',')* (classDefinitionField | futureExtension)
/**********************************************************************************************************************/
/********************** Class Definition Field ************************************************************************/
/**********************************************************************************************************************/
classDefinitionField ::= classDefinitionFieldName tagDefinition? (nativeType | objectClassDefinitionFieldType | elementDefinitionType) constraintDefinition? classDefinitionFieldBody? constraintDefinition? modifiers
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
classDefinitionFieldName ::= classDefinitionFieldNameTokenSet
{
    methods=[getName]
}
private classDefinitionFieldBody ::= '{' (classDefinitionContent | constantDefinitionContent) '}'

/**********************************************************************************************************************/
/******************** Object Class Definition *************************************************************************/
/**********************************************************************************************************************/

objectClassDefinition ::= objectClassDefinitionName '::=' 'CLASS' objectClassDefinitionBody objectClassDefinitionConstructor?
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
objectClassDefinitionName ::= objectClassDefinitionNameTokenSet
{
    methods=[getName]
}
private objectClassDefinitionBody ::= '{' objectClassDefinitionContent? '}'
objectClassDefinitionContent ::= (objectClassDefinitionField ',')* (objectClassDefinitionField | futureExtension)
/**********************************************************************************************************************/
/**************** Constructor Definition ******************************************************************************/
/**********************************************************************************************************************/
objectClassDefinitionConstructor ::= 'WITH SYNTAX' '{' objectClassDefinitionConstructorContent '}'
objectClassDefinitionConstructorContent ::= ( ('&' objectClassDefinitionFieldRef) | objectClassConstructorTokenSet | ('[' objectClassDefinitionConstructorContent ']')) +

objectClassDefinitionConstructorCall ::= '{' objectClassDefinitionConstructorCallContent '}'
objectClassDefinitionConstructorCallContent ::= (objectClassDefinitionConstructorCallContentType | objectClassDefinitionConstructorCallContentValue)+
private objectClassDefinitionConstructorCallContentType ::= (anyType | (nativeType objectClassDefinitionConstructorCallContentTypeContent?) | objectClassDefinitionConstructorCallArgumentRef) constraintDefinition?
private objectClassDefinitionConstructorCallContentValue ::= smallValueDefinition
objectClassDefinitionConstructorCallArgumentRef ::= classDefinitionNameTokenSet | objectValueDefinitionNameTokenSet | objectSetDefinitionNameTokenSet
private objectClassDefinitionConstructorCallContentTypeContent ::= '{' (classDefinitionContent | constantDefinitionContent) '}'
/**********************************************************************************************************************/
/*************** Object Class Definition Field ************************************************************************/
/**********************************************************************************************************************/
objectClassDefinitionField ::= '&' objectClassDefinitionFieldName (nativeType | elementDefinitionType)? constraintDefinition? objectClassDefinitionFieldBody? modifiers
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
objectClassDefinitionFieldName ::= objectClassDefinitionFieldNameTokenSet
{
    methods=[getName]
}
private objectClassDefinitionFieldBody ::= '{' (classDefinitionContent | constantDefinitionContent) '}'

/**********************************************************************************************************************/
/**************** Object Value Definition *****************************************************************************/
/**********************************************************************************************************************/

objectValueDefinition ::= objectValueDefinitionName (nativeType | fullQualifiedObjectClassDefinitionFieldRef | elementDefinitionType) '::=' fullValueDefinition
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
objectValueDefinitionName ::= objectValueDefinitionNameTokenSet
{
    methods=[getName]
}

/**********************************************************************************************************************/
/**************** Object Set Definition *******************************************************************************/
/**********************************************************************************************************************/

objectSetDefinition ::= objectSetDefinitionName objectClassDefinitionRef '::=' objectSetDefinitionBody
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
objectSetDefinitionName ::= objectSetDefinitionNameTokenSet
{
    methods=[getName]
}
private objectSetDefinitionBody ::= '{' objectSetDefinitionContent? '}'
objectSetDefinitionContent ::= ((objectSetDefinitionContentList | "...") ',')* (objectSetDefinitionContentList | "...")
private objectSetDefinitionContentList ::= ((objectSetDefinitionContentElement | '...') '|')* (objectSetDefinitionContentElement | "...")
private objectSetDefinitionContentElement ::= objectClassDefinitionConstructorCall | fullQualifiedObjectClassDefinitionFieldRef | objectValueDefinitionRef

/**********************************************************************************************************************/
/**************** Enumerated Definition *******************************************************************************/
/**********************************************************************************************************************/

enumeratedDefinition ::= enumeratedDefinitionName '::=' 'ENUMERATED' enumeratedDefinitionBody
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
enumeratedDefinitionName ::= enumeratedDefinitionNameTokenSet
{
    methods=[getName]
}
private enumeratedDefinitionBody ::= '{' enumeratedDefinitionContent? '}'
enumeratedDefinitionContent ::= (enumeratedDefinitionElement ',')* (enumeratedDefinitionElement | '...')
enumeratedDefinitionElement ::= enumeratedDefinitionElementTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}

/**********************************************************************************************************************/
/******************** Tag Definition **********************************************************************************/
/**********************************************************************************************************************/

tagDefinition ::= '[' 'APPLICATION'? NUMBER ']' ('IMPLICIT' | 'EXPLICIT')?
{
    methods=[getTagNumber getTaggingType getTagType]
}

/**********************************************************************************************************************/
/**************** Value Definition ************************************************************************************/
/**********************************************************************************************************************/

private smallValueDefinition ::= booleanValue | NUMBER | valueString | valueRef | valueObjectIdentifier
private fullValueDefinition ::= smallValueDefinition | valueList | objectClassDefinitionConstructorCall
valueObjectIdentifier ::= '{' valueObjectIdentifierPart+ '}'
valueObjectIdentifierPart ::= NUMBER | constantDefinitionValue
{
    methods=[getName getNumber]
}
valueString ::= '"' TEXT '"'
valueList ::= '{' (valueListLine ',')* valueListLine? '}'
valueListLine::= classDefinitionFieldRef smallValueDefinition
private booleanValue ::= 'TRUE' | 'FALSE'

/**********************************************************************************************************************/
/**************** Constraint Definition *******************************************************************************/
/**********************************************************************************************************************/

constraintDefinition ::= ('(' (constraintInBraces '|')* (constraintInBraces (',' '...')?) ')') | (constraintContentWithKeyword (',' '...')?)
private constraintInBraces ::= constraintContentWithValue | constraintContentWithKeyword | constraintDefinition
private constraintContentWithKeyword ::= constraintValueSize | constraintValueFrom | constraintValueComponent
private constraintContentWithValue ::= constraintValueDirect

constraintValueSize ::= 'SIZE' '(' constraintValueSizeContent ')'
private constraintValueSizeValueSet ::= NUMBER | 'MIN' | 'MAX' | valueRef
private constraintValueSizeContent ::= constraintValueSizeValueSet ('..' constraintValueSizeValueSet)? ('|' constraintValueSizeContent)?

constraintValueFrom ::= 'FROM' '(' constraintValueFromContent ')'
private constraintValueFromValueSet ::= valueString | valueRef
private constraintValueFromContent ::= constraintValueFromValueSet ('..' constraintValueFromValueSet)? ('|' constraintValueFromContent)?

constraintValueDirect ::= constraintValueDirectContent
private constraintValueDirectValueSet ::= valueRef | NUMBER | 'MIN' | 'MAX'
private constraintValueDirectContent ::= constraintValueDirectValueSet ('..' constraintValueDirectValueSet)?

constraintValueComponent ::= 'WITH COMPONENTS' '{' constraintValueComponentContent '}'
private constraintValueComponentContent ::= (constraintValueComponentContentField ',')* constraintValueComponentContentField
private constraintValueComponentContentField ::= '...' | (classDefinitionFieldRef constraintValueComponentContentModifier)
private constraintValueComponentContentModifier ::= 'PRESENT' | 'ABSENT'


/**********************************************************************************************************************/
/**************** Constant Definition *********************************************************************************/
/**********************************************************************************************************************/

constantDefinitionContent ::= (constantDefinitionValue ',')* constantDefinitionValue
constantDefinitionValue ::= (constantDefinitionValueName '(' smallValueDefinition ')') | valueRef
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
constantDefinitionValueName ::= constantDefinitionValueNameTokenSet
{
    methods=[getName]
}

/**********************************************************************************************************************/
/**************** Type Definition *************************************************************************************/
/**********************************************************************************************************************/

nativeType ::= primitiveType | listType | anyType | instanceOfType
private primitiveType ::= PRIMITIVE_TYPE
private listType ::= LIST_TYPE (constraintDefinition? 'OF' (nativeType | elementDefinitionType))?
private anyType ::= 'ANY' ('DEFINED BY' classDefinitionFieldRef)?
private instanceOfType ::= 'INSTANCE OF' (primitiveType | listType | anyType | elementDefinitionType)

elementDefinitionType ::= elementDefinitionRef ('{' (elementDefinitionArgument ',')* elementDefinitionArgument '}')?
private elementDefinitionArgument ::= '{' (elementDefinitionObjectSetArgumentRef | '...') '}' | elementDefinitionTypeArgumentRef | '...'
elementDefinitionObjectSetArgumentRef ::= parameterNameTokenSet | objectSetDefinitionNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReferences getObjectSetParameterReference getObjectSetDefinitionReference]
}
elementDefinitionTypeArgumentRef ::= parameterNameTokenSet | objectClassDefinitionNameTokenSet | classDefinitionNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReferences getTypeParameterReference getObjectClassDefinitionReference getClassDefinitionReference]
}

objectClassDefinitionFieldType ::= fullQualifiedObjectClassDefinitionFieldRef objectClassDefinitionRefAttribute?
private objectClassDefinitionRefAttribute ::= '(' '{' elementDefinitionObjectSetArgumentRef '}' ('{' '@' classDefinitionFieldRef '}')? ')'

/**********************************************************************************************************************/
/**************** Parameter Definition ********************************************************************************/
/**********************************************************************************************************************/

parameterDefinition ::= '{' (parameter ',')* parameter '}'
private parameter ::= objectSetParameter | typeParameter

parameterName ::= parameterNameTokenSet
{
    methods=[getName]
}

objectSetParameter ::= objectSetParameterTypeRef ':' parameterName
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}
objectSetParameterTypeRef ::= objectClassDefinitionNameTokenSet | parameterNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReferences getClassDefinitionReference getObjectClassDefinitionReference getTypeParameterReference]
}
typeParameter ::= parameterName
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getPresentation]
}

/**********************************************************************************************************************/
/******************* Reference Definition *****************************************************************************/
/**********************************************************************************************************************/
classDefinitionRef ::= classDefinitionNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReference]
}
classDefinitionFieldRef ::= classDefinitionFieldNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReference]
}
objectClassDefinitionRef ::= objectClassDefinitionNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReference]
}
parameterRef ::= parameterNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReference]
}
objectClassDefinitionFieldRef ::= objectClassDefinitionFieldNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReference]
}
fullQualifiedObjectClassDefinitionFieldRef ::= fullQualifiedObjectClassDefinitionFieldQualifierRef '.' '&' objectClassDefinitionFieldRef
fullQualifiedObjectClassDefinitionFieldQualifierRef ::= objectClassDefinitionNameTokenSet | objectValueDefinitionNameTokenSet
{
    mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
    implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
    methods=[getName setName getNameIdentifier getReferences getObjectClassDefinitionReference getObjectValueDefinitionReference]
}
objectValueDefinitionRef ::= objectValueDefinitionNameTokenSet
constantDefinitionValueRef ::= constantDefinitionValueNameTokenSet
valueRef ::= constantDefinitionValueNameTokenSet | objectValueDefinitionNameTokenSet
{
     mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
     implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
     methods=[getName setName getNameIdentifier getReferences getConstantReference getObjectValueDefinitionReference getEnumeratedDefinitionElementReference]
}
importElementTypeRef ::=  objectClassDefinitionNameTokenSet | classDefinitionNameTokenSet | objectValueDefinitionNameTokenSet | objectSetDefinitionNameTokenSet
{
     mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
     implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
     methods=[getName setName getNameIdentifier getReferences getClassDefinitionReference getObjectClassDefinitionReference getObjectValueDefinitionReference getObjectSetDefinitionReference getEnumeratedDefinitionReference]
}
elementDefinitionRef ::= objectClassDefinitionNameTokenSet | classDefinitionNameTokenSet | enumeratedDefinitionNameTokenSet
{
     mixin="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElementImpl"
     implements="org.pcsoft.plugin.intellij.asn1.language.parser.psi.element.Asn1NamedElement"
     methods=[getName setName getNameIdentifier getReferences getObjectClassDefinitionReference getClassDefinitionReference getEnumeratedReference]
}

/**********************************************************************************************************************/
/******************* Others *******************************************************************************************/
/**********************************************************************************************************************/

private modifiers ::= ('OPTIONAL' | 'UNIQUE' | ('DEFAULT' smallValueDefinition))*
private futureExtension ::= '...'

/**********************************************************************************************************************/
/******************* Basics *******************************************************************************************/
/**********************************************************************************************************************/

private moduleDefinitionNameTokenSet ::= NAME_CAP | NAME_UPPER
private importElementModuleTokenSet ::= NAME_CAP | NAME_UPPER
private classDefinitionNameTokenSet ::= NAME_CAP | NAME_UPPER
private classDefinitionFieldNameTokenSet ::= NAME_NO_CAP | NAME_LOWER
private objectClassDefinitionNameTokenSet ::= NAME_UPPER
private objectClassDefinitionFieldNameTokenSet ::= NAME_NO_CAP | NAME_CAP | NAME_LOWER
private objectValueDefinitionNameTokenSet ::= NAME_NO_CAP | NAME_LOWER
private objectClassConstructorTokenSet ::= NAME_UPPER
private objectSetDefinitionNameTokenSet ::= NAME_CAP | NAME_UPPER
private enumeratedDefinitionNameTokenSet ::= NAME_CAP | NAME_UPPER
private enumeratedDefinitionElementTokenSet ::= NAME_NO_CAP | NAME_LOWER
private constantDefinitionValueNameTokenSet ::= NAME_LOWER | NAME_NO_CAP
private parameterNameTokenSet ::= NAME_CAP | NAME_UPPER
